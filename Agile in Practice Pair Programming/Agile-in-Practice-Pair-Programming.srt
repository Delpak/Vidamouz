1
00:00:00,000 --> 00:00:02,720
Hi! and welcome to the agile Academy

2
00:00:02,870 --> 00:00:04,800
in this Agile in practice talk

3
00:00:04,870 --> 00:00:07,890
we'd like to show you how developers on an agile team

4
00:00:07,940 --> 00:00:13,060
use pair programming to work defects, help deliver faster, and produce higher quality work

5
00:00:13,120 --> 00:00:15,600
let's have a look at how this practice works

6
00:00:15,680 --> 00:00:20,100
the way developers are collaborating is a bit like driving a car on a rally

7
00:00:20,230 --> 00:00:23,900
one of you is driving while the other is navigating reading the map

8
00:00:23,970 --> 00:00:26,440
 while the driver is keeping their eyes in the road

9
00:00:26,490 --> 00:00:30,110
 the Navigator is focusing on the destination and how to get there

10
00:00:30,290 --> 00:00:32,350
regardless of the kind of work you do

11
00:00:32,400 --> 00:00:35,630
 you may want to try out collaborating with a colleague in the same way

12
00:00:35,680 --> 00:00:38,220
 especially when you are dealing with a difficult task

13
00:00:38,300 --> 00:00:40,570
it works based if both people are pairs

14
00:00:40,600 --> 00:00:44,700
 sharing the same role and having a similar skill and experience level

15
00:00:44,880 --> 00:00:46,590
here are Bill and Liz

16
00:00:46,670 --> 00:00:52,230
2 developers from the agile team who are delivering a new employee performance review system for the HR department

17
00:00:52,430 --> 00:00:55,510
 they will be working together side by side at the same computer

18
00:00:55,550 --> 00:00:57,090
 solving the same problem

19
00:00:57,160 --> 00:00:59,830
they take turns using the keyboard and mouse

20
00:00:59,930 --> 00:01:02,240
at the moment liz is the driver

21
00:01:02,300 --> 00:01:05,590
while she is writing the code and performs tests on that code

22
00:01:05,820 --> 00:01:08,350
 bill as a navigator observes her work

23
00:01:08,440 --> 00:01:10,360
considering the strategic direction

24
00:01:10,440 --> 00:01:12,710
the next steps and potential pitfalls

25
00:01:12,780 --> 00:01:16,010
 he also considers if this is a simplest design possible

26
00:01:16,060 --> 00:01:18,180
 and comes up with ideas for improvement

27
00:01:18,240 --> 00:01:19,880
 after the period of time

28
00:01:19,950 --> 00:01:22,860
 they swap rules and Liz navigates while Bill drives

29
00:01:22,900 --> 00:01:26,120
because they are constantly communicating and reviewing together

30
00:01:26,170 --> 00:01:30,280
 they produce higher quality work at a faster pace than either could do on their own

31
00:01:30,340 --> 00:01:34,730
 it also ensures that more than just one developer
 knows each part of the system

32
00:01:34,860 --> 00:01:37,360
 pair swap places frequently throughout the day

33
00:01:37,400 --> 00:01:40,860
 and also new pairs are formed to promote sharing of knowledge throughout the team

34
00:01:41,020 --> 00:01:44,190
 at the same time a uniform style of planning is carried out

35
00:01:44,270 --> 00:01:46,280
 which makes working together easier

36
00:01:46,400 --> 00:01:49,850
 it also creates an ownership and commitment to the collective code

37
00:01:49,970 --> 00:01:53,060
 despite the benefits, pair program is not always easy

38
00:01:53,210 --> 00:01:56,050
 as a driver you have someone observing you constantly

39
00:01:56,100 --> 00:02:01,830
and when you're navigating you need to refrain from rushing to point out details like messing semicolons or typos

40
00:02:02,030 --> 00:02:04,760
instead you need to get the driver time to write

41
00:02:04,790 --> 00:02:08,130
and rewrite the work while you focus on the direction the work is going

42
00:02:08,360 --> 00:02:13,680
 also you should consider that pair programming isn't suitable for all tasks or situations

43
00:02:13,740 --> 00:02:17,390
but if you choose to do it, you need to respect each other, communicate

44
00:02:17,420 --> 00:02:20,590
and make it easy on yourselves by using a computer with a big screen

45
00:02:20,770 --> 00:02:22,140
 enjoy the right

46
00:02:22,230 --> 00:02:24,140
 in this agile in practice talk

47
00:02:24,240 --> 00:02:30,030
 you saw how agile teams collaborate and use a practice of pair programming to increase the quality of the work

48
00:02:30,060 --> 00:02:33,850
you may also from time to time hear the term pairing news to

49
00:02:33,940 --> 00:02:39,860
 this can refer to 2 business people or one business person 
and a developer working together on one piece of work

50
00:02:40,010 --> 00:02:44,790
you can see that building quality into a task isn't just limited to IT folks anymore

51
00:02:44,880 --> 00:02:48,010
 pairing can also encourage the pairs to take pride in their work

52
00:02:48,050 --> 00:02:50,060
because they are sharing it with someone else

