1
00:00:00,380 --> 00:00:03,300
سلام و به «آکادمی اجایل» خوش‌آمدید

2
00:00:03,330 --> 00:00:05,400
در این گفتگوی چابک در عمل

3
00:00:05,500 --> 00:00:09,060
می‌خواهیم به این بپردازیم که تیم‌های چابک چگونه با استفاده از «یکپارچه‌سازی مداوم» می‌توانند

4
00:00:09,060 --> 00:00:13,100
راهکاری قابل استفاده را، سریع و با کمترین ریسک به مشتریان خود تحویل دهند

5
00:00:13,220 --> 00:00:16,600
جِن - سرپرست تیم منابع انسانی و مالک محصولِ پروژه‌ای که

6
00:00:16,660 --> 00:00:20,120
سیستم ارزیابی کارایی کارمندهای جدید را برای استفاده واحد منابع انسانی آماده می‌کند

7
00:00:20,220 --> 00:00:22,300
آمده تا ببیند که تیم در چه حالی است

8
00:00:22,520 --> 00:00:24,860
جِن: سلام تام! اون چراغِ قرمز توی کامپیوترت چیه؟

9
00:00:24,940 --> 00:00:26,980
انگار داره نشون می‌ده که به فنا رفتی

10
00:00:27,080 --> 00:00:28,580
تام: ها ها! نه خیلی هم اینجوری نیست

11
00:00:28,660 --> 00:00:31,460
باعث شدم که «فرایند ساخت» خراب بشه، سخت در تلاشم که درستش کنم

12
00:00:31,500 --> 00:00:32,820
بعدش این چراغ سبز میشه

13
00:00:32,900 --> 00:00:35,020
جِن: خرابی توی ساخت سیستم که به نظر چیز خوبی نمی‌آد

14
00:00:35,100 --> 00:00:35,860
معنیش چیه؟

15
00:00:36,000 --> 00:00:38,180
تام: من که این‌جوری تصور نمی‌کنم! اما بذار برات توضیح بدم

16
00:00:38,250 --> 00:00:40,360
اون‌جوری هم که احتمالاً فکر می‌کنی، نیست

17
00:00:40,640 --> 00:00:43,360
لیز، بل و من به‌عنوان توسعه‌دهنده‌ی سیستم

18
00:00:43,420 --> 00:00:46,700
داریم در هرلحظه یک بخش از سیستم بررسی عملکرد رو توسعه می‌دیم

19
00:00:46,960 --> 00:00:49,880
هر وقت یک بخش یا قابلیت جدید تکمیل میشه

20
00:00:49,940 --> 00:00:51,820
اون رو به قبلی‌ها اضافه می‌کنیم

21
00:00:52,020 --> 00:00:54,500
این همون کاریه که بهش «ساخت سیستم» میگیم

22
00:00:54,580 --> 00:00:58,080
مثل ساختن یک فیلم سینمایی با اضافه کردن پی در پی فریم‌های جدید به اون می‌مونه

23
00:00:58,180 --> 00:00:59,660
هر بار که یک فریم جدید به فیلم اضافه می‌کنیم

24
00:00:59,720 --> 00:01:03,300
فیلم رو از اول پخش می‌کنیم تا ببینیم هنوز کل فیلم منطقی به نظر میاد یا نه

25
00:01:03,360 --> 00:01:06,960
اگر مسیر داستان منطقی بود، میگیم که یک «ساخت سبز» داریم

26
00:01:07,020 --> 00:01:09,680
من الآن یه تکه کد جدید به «ساخت سبز» قبلی اضافه کردم

27
00:01:09,740 --> 00:01:11,260
و وقتی داشت تست‌ها رو اجرا می‌کرد

28
00:01:11,300 --> 00:01:14,660
- مثل بازپخش یه فیلم از ابتدا -
نشون داد که جای قطعه کد جدید درست نیست

29
00:01:14,720 --> 00:01:17,360
اون قطعه کد نتونست یکپارچه بشه درنتیجه فرآیند «ساخت سیستم» رو خراب کرد

30
00:01:17,460 --> 00:01:18,840
خب حالا باید درستش کنم

31
00:01:18,900 --> 00:01:20,500
جِن: بذار ببینم درست متوجه شدم

32
00:01:20,560 --> 00:01:27,480
شما به جای این که مولفه‌های سیستم رو جداجدا بسازید و دست‌آخر اون‌ها رو سرهم کنید، سیستم رو کم‌کم و پی‌درپی می‌سازید و توسعه می‌دید؟ 

33
00:01:27,580 --> 00:01:29,060
تام: بله، کاملاً درسته

34
00:01:29,120 --> 00:01:31,180
ما بهش «یکپارچه‌سازی مداوم» میگیم

35
00:01:31,220 --> 00:01:34,780
دلیل اینکه ما چابک کارها این کار رو می‌کنیم اینه که واقعاً ریسک رو کم می‌کنه

36
00:01:34,840 --> 00:01:37,180
یکپارچه‌سازی مداوم این‌جوری انجام میشه که

37
00:01:37,220 --> 00:01:39,620
ما کدهای جدید رو «پی در پی» و «زود به زود» یکپارچه می‌کنیم

38
00:01:39,700 --> 00:01:42,640
زود یعنی از همون روز اول یکپارچه‌سازی کد جدید رو شروع می‌کنیم

39
00:01:42,680 --> 00:01:46,220
و مکرر هم یعنی یکپارچه‌سازی کد رو چند بار در روز انجام می‌دیم

40
00:01:46,300 --> 00:01:49,040
در نتیجه سیستم بدون نقص باقی می‌مونه

41
00:01:49,100 --> 00:01:53,580
و می‌تونیم اضافه کردن قابلیت‌های جدیدی رو ادامه بدیم
با خیال راحت! یه ساخت‌وساز واقعی روی یه زیرساخت محکم

42
00:01:53,660 --> 00:01:55,880
جِن: به‌عنوان مالک محصول همین رو می‌خواستم بشنوم

43
00:01:55,940 --> 00:01:58,500
پس سوابق این چراغ‌های سبز و قرمز چی میشه تام؟

44
00:01:58,500 --> 00:02:01,260
مطمئناً دلت نمی‌خواد وقتی یه «ساخت» رو می‌ترکونی، همه خبردار بشن!

45
00:02:01,380 --> 00:02:03,300
تام: اتفاقاً برعکسه، جِن

46
00:02:03,340 --> 00:02:07,680
ماها مخصوصاً از چراغ‌های سبز و قرمز استفاده می‌کنیم تا همه‌ی افرادی که دوروبر تیم هستند، بتونند ببینند
-- مترجم --
برخی از تیم‌های چابک هنوز هم به‌عنوان یک رسم دیرینه از چراغ‌های رنگی بزرگ بر روی دیوار استفاده می‌کنند

47
00:02:07,740 --> 00:02:12,860
چراغِ قرمز به توسعه‌دهنده‌ها اعلام می‌کنه که تا وقتی چراغ سبز رو ندیدن، کد جدیدی اضافه نکنند

48
00:02:13,060 --> 00:02:15,500
جِن: چراغ دوباره سبز شد. پس «ساخت» رو درست کردی

49
00:02:15,580 --> 00:02:19,380
تام: بله! الآن بقیه می‌تونن کدهای خودشون رو اضافه کنن، در نتیجه می‌تونیم کارمون رو ادامه بدیم

50
00:02:19,520 --> 00:02:21,380
جِن: امیدوارم بتونی ساخت رو همیشه سبز نگه داری

51
00:02:21,520 --> 00:02:22,900
تام: منم امیدوارم، جِن

52
00:02:23,120 --> 00:02:25,140
در این گفتگوی چابک در عمل

53
00:02:25,160 --> 00:02:30,920
دیدید که تیم‌های چابک از «یکپارچه‌سازی مداوم» برای کاهش ریسک و ارائه یک راهکار بی‌نقص استفاده می‌کنند

54
00:02:30,980 --> 00:02:36,510
یکپارچه‌سازی مداوم به تیم‌های چابک اجازه می‌دهد تا راهکار قابل استفاده ارائه کرده و انتشارهایی کوچک و پی‌درپی داشته باشند

55
00:02:36,540 --> 00:02:40,160
که یکی از موضوعات بعدی ماست و ارزش سر زدن به وب‌سایتمان را دارد